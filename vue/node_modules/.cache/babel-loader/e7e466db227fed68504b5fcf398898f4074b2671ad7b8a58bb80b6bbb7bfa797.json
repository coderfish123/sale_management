{"ast":null,"code":"// 初始化富文本编辑器\nimport E from 'wangeditor';\nlet editor;\nfunction initWangEditor(content) {\n  setTimeout(() => {\n    if (!editor) {\n      editor = new E('#editor');\n      editor.config.placeholder = '请输入内容';\n      editor.config.uploadFileName = 'file';\n      editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload';\n      editor.create();\n    }\n    editor.txt.html(content);\n  }, 0);\n}\nexport default {\n  name: \"Notice\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        title: [{\n          required: true,\n          name: '请输入商品名称',\n          trigger: 'blur'\n        }],\n        content: [{\n          required: true,\n          img: '请输上传商品图主图',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      typeData: []\n    };\n  },\n  created() {\n    this.load(1);\n    this.loadType();\n  },\n  methods: {\n    loadType() {\n      this.$request.get('/type/selectAll').then(res => {\n        if (res.code === '200') {\n          this.typeData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      // 控制未经审核的商家不允许发布商品\n      if ('审核通过' != this.user.status) {\n        this.$message.warning('您的店铺信息还未通过审核，暂时不允许发布商品');\n        return;\n      }\n      this.form = {}; // 新增数据的时候清空数据\n      initWangEditor(); //初始化一个空的富文本编辑器\n      this.fromVisible = true; // 打开弹窗\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/goods/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    }\n  }\n};","map":{"version":3,"names":["E","editor","initWangEditor","content","setTimeout","config","placeholder","uploadFileName","uploadImgServer","create","txt","html","name","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","title","required","trigger","img","ids","typeData","created","load","loadType","methods","$request","get","then","res","code","$message","error","msg","handleAdd","status","warning","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","id","method","success","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","params","list","reset","handleCurrentChange","handleAvatarSuccess","file","fileList"],"sources":["src/views/manager/Goods.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入商品名称查询\" style=\"width: 200px\" v-model=\"name\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"primary\" plain @click=\"handleAdd\">发布商品</el-button>\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\n        <el-table-column label=\"商品主图\">\n          <template v-slot=\"scope\">\n            <div style=\"display: flex; align-items: center\">\n              <el-image style=\"width: 40px; height: 40px; \" v-if=\"scope.row.img\"\n                        :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"name\" label=\"商品名称\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"description\" label=\"商品描述\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"price\" label=\"商品价格\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"unit\" label=\"计件单位\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"typeName\" label=\"商品分类\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"businessName\" label=\"所属商家\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"count\" label=\"商品销量\" show-overflow-tooltip></el-table-column>\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n          <template v-slot=\"scope\">\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">编辑</el-button>\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n\n    <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"商品主图\">\n          <el-upload\n              class=\"avatar-uploader\"\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{ token: user.token }\"\n              list-type=\"picture\"\n              :on-success=\"handleAvatarSuccess\"\n          >\n            <el-button type=\"primary\">上传图片</el-button>\n          </el-upload>\n        </el-form-item>\n        <el-form-item prop=\"name\" label=\"商品名称\">\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"name\" label=\"商品价格\">\n          <el-input v-model=\"form.price\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"typeId\" label=\"商品分类\">\n          <el-select v-model=\"form.typeId\" placeholder=\"请选择分类\" style=\"width: 100%\">\n            <el-option v-for=\"item in typeData\" :label=\"item.name\" :value=\"item.id\" :key=\"item.id\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item prop=\"unit\" label=\"计件单位\">\n          <el-input v-model=\"form.unit\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"description\" label=\"商品介绍\">\n\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n\n<script>\n// 初始化富文本编辑器\nimport E from 'wangeditor'\n\nlet editor\nfunction initWangEditor(content) {\tsetTimeout(() => {\n  if (!editor) {\n    editor = new E('#editor')\n    editor.config.placeholder = '请输入内容'\n    editor.config.uploadFileName = 'file'\n    editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload'\n    editor.create()\n  }\n  editor.txt.html(content)\n}, 0)\n}\n\nexport default {\n  name: \"Notice\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        title: [\n          {required: true, name: '请输入商品名称', trigger: 'blur'},\n        ],\n        content: [\n          {required: true, img: '请输上传商品图主图', trigger: 'blur'},\n        ]\n      },\n      ids: [],\n      typeData: [],\n    }\n  },\n  created() {\n    this.load(1)\n    this.loadType()\n  },\n  methods: {\n    loadType() {\n      this.$request.get('/type/selectAll').then(res => {\n        if (res.code === '200') {\n          this.typeData = res.data\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    handleAdd() {   // 新增数据\n      // 控制未经审核的商家不允许发布商品\n      if('审核通过'!= this.user.status){\n        this.$message.warning('您的店铺信息还未通过审核，暂时不允许发布商品')\n        return\n      }\n      this.form = {}  // 新增数据的时候清空数据\n      initWangEditor()//初始化一个空的富文本编辑器\n      this.fromVisible = true   // 打开弹窗\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/goods/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)   //  [1,2]\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/goods/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/goods/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.name = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      this.form.img = response.data\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}